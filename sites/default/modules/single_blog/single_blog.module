<?php

/**
* @file
* Enables a single-user blog.
*/

// Constants.
define('SINGLE_BLOG_NODE_TYPE', 'article');
define('SINGLE_BLOG_LIST_COUNT', 3);

/**
* Return a list of blog entries.
*
* @param $number
*   The number of blog entries to return.
* @return
*   A results set object containtn the list of blog entries.
*/
function single_blog_list($number) {
  $query = db_select('node', 'n')
    ->fields('n', array('nid', 'title', 'created', 'uid'))
    ->condition('type', SINGLE_BLOG_NODE_TYPE)
    ->condition('status', 1)
    ->orderBy('created', 'DESC')
    ->range(0, $number)
    ->addTag('node_access')
    ->execute();

  return $query;
}

/**
* Implements hook_block_info().
*/
function single_blog_block_info() {
  $blocks = array();

  $blocks['recent'] = array(
    'info' => t('Recent blog posts'),
  );

  return $blocks;
}

/**
* Implements hookc_block_view().
*/
function single_blog_block_view($delta) {
  // Create an empty block.
  $block = array(
    'subject' => '',
    'content' => ''
  );

  if ($delta == 'recent') {
    // Create an empty block.
    $block['subject'] = t('Recent blog posts');

    // Check if the user can access content.
    if (user_access('access content')) {
      // Retrieve the most recent nodes.
      $result = single_blog_list(SINGLE_BLOG_LIST_COUNT);

      // Create links for each blog entry.
      $items = array();
      foreach ($result as $node) {
        $items[] = array(
          'data' => array(
            '#type' => 'link',
            '#title' => $node->title,
            '#href' => 'node/' . $node->nid,
          ),
          'class' => array('node-' . $node->nid)
        );
      }

      if (!empty($items)) {
        // Add CSS file in render array.
        $block['content']['#attached']['css'][] = drupal_get_path('module', 'single_blog') . '/css/single-blog.css';

        // Theme the list of block entries using a render array.
        $block['content']['list'] = array(
          '#theme' => 'item_list__single_blog',
          '#items' => $items,
          '#pre_render' => array('single_blog_item_list_child_render'),
        );
        // Add a link to the full list of blog entries.
        $block['content']['more'] = array(
          '#theme' => 'more_link',
          '#url' => 'blog',
          '#title' => t('Read the latest blog entries.'),
        );
      }
      else {
        $block['content'] = 'Nothing to display.';
      }
      dpm($block);
    }
  }

  return $block;
}

/**
* Render the child elements of theme_item_list()
* before its data is themed.
*/
function single_blog_item_list_child_render($elements) {
  foreach (array_keys($elements['#items']) AS $key) {
    if (is_array($elements['#items'][$key]['data'])) {
      $elements['#items'][$key]['data'] = drupal_render($elements['#items'][$key]['data']);
    }
  }
  return $elements;
}














